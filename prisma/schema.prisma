// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String  @id @default(uuid()) 
  name           String  @db.VarChar(50)
  email          String   @unique @db.VarChar(50)
  password       String
  refresh_token  RefreshToken?
}

model RefreshToken{
  id String  @id @default(uuid())
  expiresIn Int
  user   User @relation(fields: [userId], references: [id])
  userId String  @unique// relation scalar field (used in the `@relation` attribute above)
}



model Costumer {
  id        Int      @id @default(autoincrement())
  name      String  @db.VarChar(50) @unique
  phone     String? @db.VarChar(50)
  type      String? @db.VarChar(50) // fisico ou juridico
  cpf_cnpj  String? @db.VarChar(50)
  address   Address?  
  note      String? @db.VarChar(255)
	
}

model Address {
  id        Int   @id @default(autoincrement())
  number    String @db.VarChar(50)
  district  String @db.VarChar(50)
  city      String @db.VarChar(50)
  state     String @db.VarChar(50)
  client    Costumer? @relation(fields: [clientId], references: [id])
  clientId  Int? @unique
  provider  Provider? @relation(fields: [providerId], references: [id])
  providerId Int? @unique
  employe   Employee? @relation(fields: [employeeId], references: [id])
  employeeId Int? @unique
}

model Provider {
  id        Int      @id @default(autoincrement())
  name      String  @db.VarChar(50)
  phone     String @db.VarChar(50)
  type      String @db.VarChar(50) // fisico ou juridico
  cpf_cnpj  String @db.VarChar(50)
  address   Address?  
  note      String @db.VarChar(255)
}

model Employee {
  id             Int      @id @default(autoincrement())
  name           String  @db.VarChar(50)
  phone          String @db.VarChar(50)
  monthly_salary Float
  profesion      String @db.VarChar(50) // fisico ou juridico
  cpf            String @db.VarChar(50)
  address        Address?  
  note           String @db.VarChar(255)
}

